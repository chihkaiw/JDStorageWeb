buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'war'

jar {
	baseName = 'demo'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
  	compile('org.springframework.boot:spring-boot-starter')
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-tomcat")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("com.dropbox.core:dropbox-core-sdk:1.8.2")
	compile("log4j:log4j:1.2.17")
	compile("org.json:json:20160212")
	compile("commons-logging:commons-logging:1.1.1")
	compile("org.slf4j:slf4j-api:1.7.21")
	compile("com.fasterxml.jackson.core:jackson-core:2.7.3")
	compile("jstl:jstl:1.2")
	compile("org.apache.tomcat.embed:tomcat-embed-jasper:8.5.4")
    // end::actuator[]
    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

eclipse {
  classpath {
     containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
     containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
  }
}
